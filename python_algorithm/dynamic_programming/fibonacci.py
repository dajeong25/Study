# 출처 : 멀티잇 코딩테스트 러닝클래스'Python 5월반
# 다이나믹 프로그래밍 - 피보나치 수

# 피보나치 수는 점화식!

K = int(input())

f_1 = 1
f_2 = 1

for i in range(3, K+1):
	f_3 = f_1 + f_2
	f_1, f_2 = f_2, f_3

print(f_2%1000000007)

#################################################################################
# 해설1 : 리스트에 담기
f = [1,1]
for i in range(100000):
    f.append((f[-1] + f[-2])%1000000007)
print(f[K-1])

#################################################################################
# 해설2 : 재귀함수 사용
import sys
sys.setrecursionlimit(111111)

# 이 정해 코드를 그냥 실행하면 스택 메모리 제한으로 인해 일부 테스트 케이스를 통과하지 못합니다.
# 아래 주석 처리된 코드와 같이 실행하면, 스택 메모리 제한을 임시적으로 조금 늘려서 문제를 해결할 수 있습니다.
# 시스템에 직접 접근하는 코드이므로, 일반적으로 코딩 테스트를 응시할 때는 사용하면 안되는 코드입니다!!
'''
import resource
resource.setrlimit(resource.RLIMIT_STACK, (64 * 1024 * 1024, -1))
'''
MOD = 10**9 + 7
F = [-1 for _ in range(100008)]

def fib(n):
    if F[n] != -1:
        return F[n]
    if n <= 2:
        return 1
    F[n] = (fib(n - 1) + fib(n - 2)) % MOD
    return F[n]

print(fib(K))
# 어떤 부분은 저장해두고 답이 필요할 때 사용하면서 
# 같은 문제를 불필요하게 여러번 해결하는 것을 막아 효율적으로 문제해결 가능해짐.

# 그외의 피보나치 수열을 구하고 싶을 떄 참고 링크 : https://richwind.co.kr/3